#!/bin/bash

step_file="/root/.malware_step"
if [ ! -f "$step_file" ]; then echo 1 > "$step_file"; fi
step=$(cat "$step_file")

# Étape 1 : Processus suspect
if [[ "$step" == "1" ]]; then
    echo -e "\n🔍 \033[36mÉtape 1 : Identification d’un processus suspect.\033[0m"
    echo "Fichier à consulter : /tmp/process_list.txt"
    echo "Commande : cat /tmp/process_list.txt"
    echo -e "\033[33m(Note : Repérez les processus suspects comme ceux contenant 'crypt' ou 'nc')\033[0m"
    read -p "Avez-vous consulté la liste ? (y/n) : " a
    [[ "$a" != "y" ]] && echo -e "\033[31mVeuillez consulter le fichier avec : cat /tmp/process_list.txt\033[0m" && exit 0
    read -p "🟡 Question : Quel processus semble suspect ? " answer
    if echo "$answer" | grep -iq "cryptominer"; then
        echo -e "\033[32m✅ Étape 1 validée !\033[0m"
	echo ""
        echo 2 > "$step_file"
    else
        echo -e "\033[31m❌ Mauvaise réponse. Indice : un mineur de crypto ?\033[0m"
    fi
    exit 0
fi

# Étape 2 : Fichier suspect
if [[ "$step" == "2" ]]; then
    echo -e "\n📁 \033[36mÉtape 2 : Analyse d’un fichier suspect.\033[0m"
    echo "Fichier à analyser : /tmp/suspicious_file.py"
    echo "Commande : cat /tmp/suspicious_file.py"
    read -p "Avez-vous lu le fichier ? (y/n) : " a
    [[ "$a" != "y" ]] && echo -e "\033[31mVeuillez lire le fichier avec : cat /tmp/suspicious_file.py\033[0m" && exit 0
    read -p "🟡 Question : Quelle action dangereuse est réalisée ? " answer
    if echo "$answer" | grep -iqE "reverse shell|socket"; then
        echo -e "\033[32m✅ Étape 2 validée !\033[0m"
	echo ""
        echo 3 > "$step_file"
    else
        echo -e "\033[31m❌ Mauvaise réponse. Indice : une connexion à distance ?\033[0m"
    fi
    exit 0
fi

# Étape 3 : Logs réseau
if [[ "$step" == "3" ]]; then
    echo -e "\n🌐 \033[36mÉtape 3 : Analyse des connexions réseau.\033[0m"
    echo "Fichier à consulter : /tmp/network_logs.txt"
    read -p "Avez-vous lu les logs ? (y/n) : " a
    [[ "$a" != "y" ]] && echo -e "\033[31mVeuillez lire le fichier avec : cat /tmp/network_logs.txt\033[0m" && exit 0
    read -p "🟡 Question : Quelle IP semble suspecte ? " answer
    if echo "$answer" | grep -q "192.168.56.66"; then
        echo -e "\033[32m✅ Étape 3 validée !\033[0m"
	echo ""
        echo 4 > "$step_file"
    else
        echo -e "\033[31m❌ Ce n’est pas la bonne IP. Analyse les ports et services.\033[0m"
    fi
    exit 0
fi

# Étape 4 : Tentative d'exfiltration
if [[ "$step" == "4" ]]; then
    echo -e "\n📤 \033[36mÉtape 4 : Tentative d’exfiltration détectée\033[0m"
    echo "Fichier : /tmp/exfiltration_attempt.log"
    read -p "Avez-vous consulté le fichier ? (y/n) : " a
    [[ "$a" != "y" ]] && echo -e "\033[31mVeuillez lire le fichier avec : cat /tmp/exfiltration_attempt.log\033[0m" && exit 0
    read -p "🟡 Question : Quel protocole a été utilisé ? " answer
    if echo "$answer" | grep -iq "ftp"; then
        echo -e "\033[32m✅ Étape 4 validée !\033[0m"
	echo ""
        echo 5 > "$step_file"
    else
        echo -e "\033[31m❌ Mauvaise réponse. Indice : vieux protocole ?\033[0m"
    fi
    exit 0
fi

# Étape 5 : Résumé à valider
if [[ "$step" == "5" ]]; then
    echo -e "\n📝 \033[36mÉtape 5 : Validation du résumé de l’analyse\033[0m"
    echo "Fichier à lire : /tmp/summary.txt"
    read -p "Avez-vous lu le résumé ? (y/n) : " a
    [[ "$a" != "y" ]] && echo -e "\033[31mVeuillez lire le fichier avec : cat /tmp/summary.txt\033[0m" && exit 0
    read -p "🟡 Question : Le malware a-t-il été neutralisé ? " answer
    if echo "$answer" | grep -iq "oui"; then
        echo -e "\033[32m✅ Étape 5 validée !\033[0m"
	echo ""
	echo -e "\n🎉 \033[32mFélicitations ! Vous avez complété le scénario Malware.\033[0m"
        echo -e "🛡️ N'oubliez jamais de vérifier les processus, connexions réseau et comportements suspects."
    else
        echo -e "\033[31m❌ Mauvaise réponse. Relis le résumé.\033[0m"
    fi
    exit 0
fi

